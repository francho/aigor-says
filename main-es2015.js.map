{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/api/aigor-api.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/app.module.ts","./src/app/models/aigor-message.ts","./src/app/pages/home/home.component.ts","./src/app/pages/pages.module.ts","./src/app/pages/talk/talk.component.ts","./src/app/pages/talk/talk.component.html","./src/app/ui/host-selector/host-selector.component.ts","./src/app/ui/host-selector/host-selector.component.html","./src/app/ui/nav-menu/nav-menu.component.ts","./src/app/ui/nav-menu/nav-menu.component.html","./src/app/ui/ui.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {AigorMessage} from \"../models/aigor-message\";\nimport {Observable, of} from \"rxjs\";\nimport {catchError, last, map} from \"rxjs/operators\";\nimport {AigorSaysApiServer} from \"../models/aigor-says-app-config\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AigorApiService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  talk(host: AigorSaysApiServer, message: AigorMessage):  Observable<any> {\n    const url = `${host.url}/api/Speaker/say`;\n    return this.http.post(url, message).pipe(\n      catchError(this.handleError('talk', false))\n    )\n  }\n\n  isAlive(host: AigorSaysApiServer):  Observable<boolean> {\n    const url = `${host.url}/health`;\n    return this.http.get(url, { observe: 'response', responseType: 'text'}).pipe(\n      map(r => true),\n      last(),\n      catchError(this.handleError('isAlive', false))\n    )\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"app-container\">\r\n    <app-host-selector></app-host-selector>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\nimport {AigorSaysAppConfig} from \"./models/aigor-says-app-config\";\r\nimport {Injectable} from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AppConfig {\r\n  static settings: AigorSaysAppConfig;\r\n  constructor(private http: HttpClient) {}\r\n  load() {\r\n    const jsonFile = `assets/config/${environment.config}`;\r\n    return new Promise<void>((resolve, reject) => {\r\n      this.http.get(jsonFile).toPromise().then((response : AigorSaysAppConfig) => {\r\n        AppConfig.settings = <AigorSaysAppConfig>response;\r\n        resolve();\r\n      }).catch((response: any) => {\r\n        reject(`Could not load file '${jsonFile}': ${JSON.stringify(response)}`);\r\n      });\r\n    });\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {RouterModule} from \"@angular/router\";\r\nimport {AppComponent} from \"./app.component\";\r\nimport {PagesModule} from \"./pages/pages.module\";\r\nimport {UiModule} from \"./ui/ui.module\";\r\nimport {AppConfig} from \"./app.config\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\n\r\nfunction initializeApp(appConfig: AppConfig) {\r\n  return () => appConfig.load();\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({appId: 'aigor-says-webapp'}),\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot([\r\n      {path: '**', redirectTo: '/', pathMatch: 'full'}\r\n    ]),\r\n    UiModule,\r\n    PagesModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule\r\n  ],\r\n  providers: [\r\n    AppConfig,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initializeApp,\r\n      deps: [AppConfig], multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","export class AigorMessage {\n  constructor(\n    public phrase: string\n  ) {}\n}\n","import {Component} from '@angular/core';\r\nimport {AigorSaysApiServer} from \"../../models/aigor-says-app-config\";\r\nimport {AppConfig} from \"../../app.config\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  public hosts:AigorSaysApiServer[] = AppConfig.settings.apiServers;\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HomeComponent} from \"./home/home.component\";\nimport {UiModule} from \"../ui/ui.module\";\nimport {TalkComponent} from './talk/talk.component';\nimport {RouterModule} from \"@angular/router\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    TalkComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot([\n      {path: '', component: HomeComponent},\n      {path: 'talk/:id', component: TalkComponent}\n    ]),\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    FlexLayoutModule,\n  ]\n})\nexport class PagesModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AigorMessage} from \"../../models/aigor-message\";\nimport {AigorApiService} from \"../../api/aigor-api.service\";\nimport {AigorSaysApiServer} from \"../../models/aigor-says-app-config\";\nimport {AppConfig} from \"../../app.config\";\nimport {MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-talk',\n  templateUrl: './talk.component.html',\n  styleUrls: ['./talk.component.css']\n})\nexport class TalkComponent implements OnInit {\n  model = new AigorMessage('');\n  host: AigorSaysApiServer;\n\n  constructor(private aigorApi: AigorApiService, private snackBar: MatSnackBar) {\n    this.host =  AppConfig.settings.apiServers[0]\n  }\n\n  ngOnInit() {\n  }\n\n  onTalk() {\n    this.aigorApi.talk(this.host, this.model).subscribe( _=> {\n      this.snackBar.open(\"Mensaje enviado\", null, { duration: 5000 })\n    });\n  }\n}\n","<div class=\"container\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxFill >\n  <mat-card fxFlex=\"80%\" >\n      <form #talkForm=\"ngForm\">\n          <mat-form-field color=\"accent\">\n            <mat-label>¿Si?, mi amo...</mat-label>\n            <textarea id=\"msg\"\n                      appearance=\"outline\"\n                      matInput\n                      name=\"msg\"\n                      [(ngModel)]=\"model.phrase\"\n                      required\n                      rows=\"2\"\n                      placeholder=\"Tu mensaje\"\n                      #message=\"ngModel\"\n            ></textarea>\n            <mat-error [hidden]=\"message.valid\">\n              El mensaje es requerido\n            </mat-error>\n          </mat-form-field>\n          <button mat-raised-button\n                  color=\"accent\"\n                  [disabled]=\"!talkForm.valid\"\n                  (click)=\"onTalk(); talkForm.resetForm()\"\n          >Habla!\n          </button>\n      </form>\n  </mat-card>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AigorSaysApiServer} from \"../../models/aigor-says-app-config\";\nimport {AppConfig} from \"../../app.config\";\nimport {AigorApiService} from \"../../api/aigor-api.service\";\n\nconst STATUS_RETRY_MS = 60 * 1000\n\n@Component({\n  selector: 'app-host-selector',\n  templateUrl: './host-selector.component.html',\n  styleUrls: ['./host-selector.component.css']\n})\n\nexport class HostSelectorComponent implements OnInit {\n\n  public hosts:AigorSaysApiServer[]=[];\n\n  constructor(private aigorApiService: AigorApiService) { }\n\n  ngOnInit(): void {\n    this.hosts = AppConfig.settings.apiServers;\n    this.refreshHostStatus();\n  }\n\n  private refreshHostStatus() {\n    console.log('refresh hosts status');\n    for (let i = 0; i < this.hosts.length; i++) {\n       this.aigorApiService.isAlive(this.hosts[i]).subscribe(status => this.hosts[i].isAlive = status);\n    }\n    setTimeout(() => this.refreshHostStatus(), STATUS_RETRY_MS );\n  }\n\n}\n","<nav mat-tab-nav-bar>\n\n  <a mat-tab-link\n     *ngFor=\"let host of hosts\"\n     [routerLink]=\"['/talk', host.id]\"\n     routerLinkActive #rla=\"routerLinkActive\"\n     [active]=\"rla.isActive\"\n  >\n      <span\n        matBadge=\"{{ host.isAlive ? 'on' : 'off' }}\"\n        matBadgeOverlap=\"false\"\n        [matBadgeColor]=\"host.isAlive?'accent':'warn'\" >{{host.name}}</span>\n  </a>\n</nav>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<header>\r\n\r\n  <mat-toolbar>\r\n    <button mat-icon-button color=\"primary\" aria-label=\"Return to home\" [routerLink]=\"['/']\">\r\n      <mat-icon>record_voice_over</mat-icon>\r\n    </button>\r\n    soy Aigor!\r\n  </mat-toolbar>\r\n</header>\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {NavMenuComponent} from \"./nav-menu/nav-menu.component\";\nimport {RouterModule} from \"@angular/router\";\nimport { HostSelectorComponent } from './host-selector/host-selector.component';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {MatBadgeModule} from \"@angular/material/badge\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n\n@NgModule({\n  declarations: [\n    NavMenuComponent,\n    HostSelectorComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatBadgeModule,\n    MatSnackBarModule\n  ],\n    exports: [\n        NavMenuComponent,\n        HostSelectorComponent\n    ]\n})\nexport class UiModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  config: 'config.dev.json'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport {enableProdMode} from \"@angular/core\";\r\nimport {platformBrowserDynamic} from \"@angular/platform-browser-dynamic\";\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n// export { renderModule, renderModuleFactory } from '@angular/platform-server';\r\n"],"sourceRoot":"webpack:///"}